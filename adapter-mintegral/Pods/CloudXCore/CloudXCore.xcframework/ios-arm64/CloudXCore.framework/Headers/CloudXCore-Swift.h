#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.0.3 effective-5.10 (swiftlang-6.0.3.1.10 clang-1600.0.30.1)
#ifndef CLOUDXCORE_SWIFT_H
#define CLOUDXCORE_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import CoreData;
@import CoreFoundation;
@import ObjectiveC;
@import UIKit;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="CloudXCore",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSEntityDescription;
@class NSManagedObjectContext;

SWIFT_CLASS_NAMED("AppSessionModel")
@interface AppSessionModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@class PerformanceMetricModel;
@class NSSet;

@interface AppSessionModel (SWIFT_EXTENSION(CloudXCore))
- (void)addPerformanceMetricsObject:(PerformanceMetricModel * _Nonnull)value;
- (void)removePerformanceMetricsObject:(PerformanceMetricModel * _Nonnull)value;
- (void)addPerformanceMetrics:(NSSet * _Nonnull)values;
- (void)removePerformanceMetrics:(NSSet * _Nonnull)values;
@end

@class SessionMetricModel;

@interface AppSessionModel (SWIFT_EXTENSION(CloudXCore))
- (void)addMetricsObject:(SessionMetricModel * _Nonnull)value;
- (void)removeMetricsObject:(SessionMetricModel * _Nonnull)value;
- (void)addMetrics:(NSSet * _Nonnull)values;
- (void)removeMetrics:(NSSet * _Nonnull)values;
@end

@class NSString;
@class NSURL;

@interface AppSessionModel (SWIFT_EXTENSION(CloudXCore))
@property (nonatomic, copy) NSString * _Nullable appKey;
@property (nonatomic) double duration;
@property (nonatomic, copy) NSString * _Nullable id;
@property (nonatomic, copy) NSURL * _Nullable url;
@property (nonatomic, strong) NSSet * _Nullable metrics;
@property (nonatomic, strong) NSSet * _Nullable performanceMetrics;
@end

@protocol CloudXAd;

/// Base protocol for all ad delegates.
SWIFT_PROTOCOL("_TtP10CloudXCore14BaseAdDelegate_")
@protocol BaseAdDelegate
/// Called when ad is loaded.
/// \param ad ad that was loaded
///
- (void)didLoadWithAd:(id <CloudXAd> _Nonnull)ad;
/// Called when ad fails to load with error.
/// \param ad ad that failed to load
///
/// \param error error that caused the failure
///
- (void)failToLoadWithAd:(id <CloudXAd> _Nonnull)ad with:(NSError * _Nonnull)error;
/// Called when ad is shown.
/// \param ad ad that was shown
///
- (void)didShowWithAd:(id <CloudXAd> _Nonnull)ad;
/// Called when ad fails to show.
/// \param ad ad that failed to show
///
/// \param error error that caused the failure
///
- (void)failToShowWithAd:(id <CloudXAd> _Nonnull)ad with:(NSError * _Nonnull)error;
/// Called when ad is closed.
/// \param ad ad that was closed
///
- (void)didHideWithAd:(id <CloudXAd> _Nonnull)ad;
/// Called when ad is clicked.
/// \param ad ad that was clicked
///
- (void)didClickOn:(id <CloudXAd> _Nonnull)ad;
/// Called when ad impression is detected.
/// \param ad ad that was shown
///
- (void)impressionOn:(id <CloudXAd> _Nonnull)ad;
@end



/// Implement this protocol to check ad status.
SWIFT_PROTOCOL("_TtP10CloudXCore11StatusCheck_")
@protocol StatusCheck
/// Returns true if ad is ready to be shown.
@property (nonatomic, readonly) BOOL isReady;
@end


/// Implement this protocol to destroy ad.
SWIFT_PROTOCOL("_TtP10CloudXCore11Destroyable_")
@protocol Destroyable
/// Destroys ad and release it from memory.
- (void)destroy;
@end


/// Base protocol for all ad types.
SWIFT_PROTOCOL("_TtP10CloudXCore8CloudXAd_")
@protocol CloudXAd <Destroyable, StatusCheck>
/// Starts loading ad
- (void)load;
@end

@protocol CloudXBannerDelegate;
@class NSCoder;

/// <code>CloudXBannerAdView</code> is represents a banner ad view in the CloudX SDK.
SWIFT_CLASS("_TtC10CloudXCore18CloudXBannerAdView")
@interface CloudXBannerAdView : UIView <CloudXAd>
/// A weak reference to the object that implements <code>CloudXBannerDelegate</code> protocol. This object will receive events related to the banner ad.
@property (nonatomic, weak) id <CloudXBannerDelegate> _Nullable delegate;
/// A boolean indicating whether the ad is loaded and ready to be shown.
@property (nonatomic) BOOL isReady;
/// A boolean indicating whether to suspend preloading the ad when it’s not visible.
@property (nonatomic) BOOL suspendPreloadWhenInvisible;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToSuperview;
/// Starts banner loading process.
/// It should be called once after the banner is created.
/// Banner wil be automatically reloaded after each show based on placement settings.
- (void)load;
/// Removes the view from its superview and destroys the banner ad.
- (void)destroy;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// Protocol for Banner ad delegates.
SWIFT_PROTOCOL("_TtP10CloudXCore20CloudXBannerDelegate_")
@protocol CloudXBannerDelegate <BaseAdDelegate>
@end

/// <code>CloudXBannerType</code> is a public enumeration that represents different types of banner ads that can be served.
/// This enumeration can be used to specify the type and size of a banner ad when requesting ads from the CloudX SDK.
typedef SWIFT_ENUM(NSInteger, CloudXBannerType, open) {
/// This case represents a banner ad with a width of 320 and a height of 50.
/// If the device type is a tablet, the size is adjusted to 728x90.
  CloudXBannerTypeW320h50 = 0,
/// This case represents a medium rectangle ad (also known as “medium rectangle”) with a size of 300x250.
  CloudXBannerTypeMrec = 1,
};


/// Protocol for Interstitial ad delegates.
SWIFT_PROTOCOL("_TtP10CloudXCore26CloudXInterstitialDelegate_")
@protocol CloudXInterstitialDelegate <BaseAdDelegate>
@end


/// A view that displays a medium native ad.
SWIFT_CLASS("_TtC10CloudXCore22CloudXMediumNativeView")
@interface CloudXMediumNativeView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end

@protocol CloudXNativeDelegate;

/// The native ad view. Add this object to you view ierarchy to display native ads.
SWIFT_CLASS("_TtC10CloudXCore18CloudXNativeAdView")
@interface CloudXNativeAdView : UIView <CloudXAd>
/// Delegate for the native ad view to notify about ad events.
@property (nonatomic, weak) id <CloudXNativeDelegate> _Nullable delegate;
/// Flag to indicate if the native ad is ready to be shown.
@property (nonatomic) BOOL isReady;
/// A boolean indicating whether to suspend preloading the ad when it’s not visible.
@property (nonatomic) BOOL suspendPreloadWhenInvisible;
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (void)didMoveToSuperview;
/// Starts loading the native ad
- (void)load;
/// Destroys the native ad and release all resources
- (void)destroy;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



/// Protocol for Native ad delegates.
SWIFT_PROTOCOL("_TtP10CloudXCore20CloudXNativeDelegate_")
@protocol CloudXNativeDelegate <BaseAdDelegate>
@end


/// Fill this object to respect user privacy consent.
SWIFT_CLASS("_TtC10CloudXCore13CloudXPrivacy")
@interface CloudXPrivacy : NSObject
/// Checks if user has set consent for information sharing.
///
/// returns:
/// <code>true</code>if user has consent for information sharing.. <code>false</code> if user has not consented information sharing or the value has not been set.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL hasUserConsent;)
+ (BOOL)hasUserConsent SWIFT_WARN_UNUSED_RESULT;
+ (void)setHasUserConsent:(BOOL)value;
/// Checks if the user is age-restricted.
///
/// returns:
/// <code>true</code>  if the user is age-restricted. <code>false</code>  if the user is not age-restricted or the age-restriction value has not been set.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isAgeRestrictedUser;)
+ (BOOL)isAgeRestrictedUser SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsAgeRestrictedUser:(BOOL)value;
/// Checks if the user has opted out of the sale of their personal information.
///
/// returns:
/// <code>true</code> if the user opted out of the sale of their personal information. <code>false</code> if the user opted in to the sale of their personal information or the value has not been set .
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isDoNotSell;)
+ (BOOL)isDoNotSell SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsDoNotSell:(BOOL)value;
/// Checks if the user has opted out of the sale of their personal information.
///
/// returns:
/// <code>true</code> if user has set a value of consent for information sharing.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isUserConsentSet;)
+ (BOOL)isUserConsentSet SWIFT_WARN_UNUSED_RESULT;
/// Checks if user has set its age restricted settings.
///
/// returns:
/// <code>true</code> if user has set its age restricted settings.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isAgeRestrictedUserSet;)
+ (BOOL)isAgeRestrictedUserSet SWIFT_WARN_UNUSED_RESULT;
/// Checks if the user has set the option to sell their personal information.
///
/// returns:
/// <code>true</code> if user has chosen an option to sell their personal information.
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly) BOOL isDoNotSellSet;)
+ (BOOL)isDoNotSellSet SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
/// Returns IAB US Privacy string.
///
/// returns:
///
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, copy) NSString * _Nullable usPrivacyString;)
+ (NSString * _Nullable)usPrivacyString SWIFT_WARN_UNUSED_RESULT;
@end


/// Protocol for Rewarded ad delegates.
SWIFT_PROTOCOL("_TtP10CloudXCore22CloudXRewardedDelegate_")
@protocol CloudXRewardedDelegate <BaseAdDelegate>
/// Called when user is rewarded.
/// \param ad ad that was rewarded
///
- (void)userRewardedWithAd:(id <CloudXAd> _Nonnull)ad;
/// Called when rewarded video started.
/// \param ad ad that was started
///
- (void)rewardedVideoStartedWithAd:(id <CloudXAd> _Nonnull)ad;
/// Called when rewarded video completed.
/// \param ad ad that was completed
///
- (void)rewardedVideoCompletedWithAd:(id <CloudXAd> _Nonnull)ad;
@end


/// A view that displays a small native ad.
SWIFT_CLASS("_TtC10CloudXCore21CloudXSmallNativeView")
@interface CloudXSmallNativeView : UIView
- (nullable instancetype)initWithCoder:(NSCoder * _Nonnull)coder SWIFT_UNAVAILABLE;
- (nonnull instancetype)initWithFrame:(CGRect)frame SWIFT_UNAVAILABLE;
@end



SWIFT_CLASS_NAMED("InitMetricsModel")
@interface InitMetricsModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end



@class NSDate;

@interface InitMetricsModel (SWIFT_EXTENSION(CloudXCore))
@property (nonatomic, copy) NSString * _Nullable appKey;
@property (nonatomic, copy) NSDate * _Nullable endedAt;
@property (nonatomic, copy) NSString * _Nullable sessionId;
@property (nonatomic, copy) NSDate * _Nullable startedAt;
@property (nonatomic) BOOL success;
@end


SWIFT_CLASS_NAMED("PerformanceMetricModel")
@interface PerformanceMetricModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface PerformanceMetricModel (SWIFT_EXTENSION(CloudXCore))
@property (nonatomic) int16_t adLoadCount;
@property (nonatomic) double adLoadLatency;
@property (nonatomic) double bidRequestLatency;
@property (nonatomic) int16_t bidResponseCount;
@property (nonatomic) int16_t clickCount;
@property (nonatomic) int16_t closeCount;
@property (nonatomic) double closeLatency;
@property (nonatomic) int16_t failToLoadAdCount;
@property (nonatomic) int16_t impressionCount;
@property (nonatomic, copy) NSString * _Nullable placementID;
@property (nonatomic, strong) AppSessionModel * _Nullable session;
@end


SWIFT_CLASS_NAMED("SessionMetricModel")
@interface SessionMetricModel : NSManagedObject
- (nonnull instancetype)initWithEntity:(NSEntityDescription * _Nonnull)entity insertIntoManagedObjectContext:(NSManagedObjectContext * _Nullable)context OBJC_DESIGNATED_INITIALIZER;
@end




@interface SessionMetricModel (SWIFT_EXTENSION(CloudXCore))
@property (nonatomic, copy) NSString * _Nullable placementID;
@property (nonatomic, copy) NSDate * _Nullable timestamp;
@property (nonatomic, copy) NSString * _Nullable type;
@property (nonatomic) double value;
@property (nonatomic, strong) AppSessionModel * _Nullable session;
@end





#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
